[
  {
    "name": "[B"
  },
  {
    "name": "[C"
  },
  {
    "name": "[D"
  },
  {
    "name": "[F"
  },
  {
    "name": "[I"
  },
  {
    "name": "[J"
  },
  {
    "name": "[Lio.ballerina.runtime.internal.types.BMethodType;"
  },
  {
    "name": "[Ljava.lang.String;"
  },
  {
    "name": "[Ljavax.management.openmbean.CompositeData;"
  },
  {
    "name": "[Lorg.openxmlformats.schemas.drawingml.x2006.main.CTNonVisualDrawingProps;"
  },
  {
    "name": "[Lorg.openxmlformats.schemas.presentationml.x2006.main.CTGroupShape;"
  },
  {
    "name": "[S"
  },
  {
    "name": "[Z"
  },
  {
    "name": "ballerina.ai$test.1.$_init",
    "methods": [
      { "name": "$getTestExecutionState", "parameterTypes": [] },
      { "name": "main", "parameterTypes": ["java.lang.String[]"] }
    ]
  },
  {
    "name": "com.aayushatharva.brotli4j.Brotli4jLoader"
  },
  {
    "name": "com.fasterxml.jackson.databind.ObjectMapper"
  },
  {
    "name": "com.github.benmanes.caffeine.cache.BBHeader$ReadAndWriteCounterRef",
    "fields": [{ "name": "writeCounter" }]
  },
  {
    "name": "com.github.benmanes.caffeine.cache.BBHeader$ReadCounterRef",
    "fields": [{ "name": "readCounter" }]
  },
  {
    "name": "com.github.benmanes.caffeine.cache.BLCHeader$DrainStatusRef",
    "fields": [{ "name": "drainStatus" }]
  },
  {
    "name": "com.github.benmanes.caffeine.cache.BaseMpscLinkedArrayQueueColdProducerFields",
    "fields": [{ "name": "producerLimit" }]
  },
  {
    "name": "com.github.benmanes.caffeine.cache.BaseMpscLinkedArrayQueueConsumerFields",
    "fields": [{ "name": "consumerIndex" }]
  },
  {
    "name": "com.github.benmanes.caffeine.cache.BaseMpscLinkedArrayQueueProducerFields",
    "fields": [{ "name": "producerIndex" }]
  },
  {
    "name": "com.github.benmanes.caffeine.cache.BoundedLocalCache",
    "fields": [{ "name": "refreshes" }]
  },
  {
    "name": "com.github.benmanes.caffeine.cache.CacheLoader",
    "methods": [{ "name": "loadAll", "parameterTypes": ["java.util.Set"] }]
  },
  {
    "name": "com.github.benmanes.caffeine.cache.PS",
    "fields": [{ "name": "key" }, { "name": "value" }]
  },
  {
    "name": "com.github.benmanes.caffeine.cache.PSMS",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "com.github.benmanes.caffeine.cache.SSMS",
    "fields": [{ "name": "FACTORY" }]
  },
  {
    "name": "com.github.benmanes.caffeine.cache.StripedBuffer",
    "fields": [{ "name": "tableBusy" }]
  },
  {
    "name": "com.github.benmanes.caffeine.cache.WS",
    "fields": [{ "name": "FACTORY" }]
  },
  {
    "name": "com.github.luben.zstd.Zstd"
  },
  {
    "name": "com.sun.management.GarbageCollectorMXBean",
    "queryAllPublicMethods": true
  },
  {
    "name": "com.sun.management.GcInfo",
    "queryAllPublicMethods": true
  },
  {
    "name": "com.sun.management.HotSpotDiagnosticMXBean",
    "queryAllPublicMethods": true
  },
  {
    "name": "com.sun.management.ThreadMXBean",
    "queryAllPublicMethods": true
  },
  {
    "name": "com.sun.management.UnixOperatingSystemMXBean",
    "queryAllPublicMethods": true
  },
  {
    "name": "com.sun.management.VMOption",
    "queryAllPublicMethods": true
  },
  {
    "name": "com.sun.management.internal.GarbageCollectorExtImpl",
    "queryAllPublicConstructors": true
  },
  {
    "name": "com.sun.management.internal.HotSpotDiagnostic",
    "queryAllPublicConstructors": true
  },
  {
    "name": "com.sun.management.internal.HotSpotThreadImpl",
    "queryAllPublicConstructors": true
  },
  {
    "name": "com.sun.management.internal.OperatingSystemImpl",
    "queryAllPublicConstructors": true
  },
  {
    "name": "com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "com.sun.org.apache.xerces.internal.jaxp.SAXParserFactoryImpl",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.ballerina.stdlib.http.transport.contractimpl.DefaultHttpClientUpgradeHandler"
  },
  {
    "name": "io.ballerina.stdlib.http.transport.contractimpl.sender.HttpClientChannelInitializer",
    "methods": [
      {
        "name": "exceptionCaught",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Throwable"
        ]
      }
    ]
  },
  {
    "name": "io.ballerina.stdlib.http.transport.contractimpl.sender.StatusLineAndHeaderLengthValidator",
    "methods": [
      {
        "name": "channelRead",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "io.ballerina.stdlib.http.transport.contractimpl.sender.TargetHandler",
    "methods": [
      {
        "name": "channelActive",
        "parameterTypes": ["io.netty.channel.ChannelHandlerContext"]
      },
      {
        "name": "channelInactive",
        "parameterTypes": ["io.netty.channel.ChannelHandlerContext"]
      },
      {
        "name": "channelRead",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object"
        ]
      },
      {
        "name": "exceptionCaught",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Throwable"
        ]
      },
      {
        "name": "userEventTriggered",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "io.netty.buffer.AbstractByteBufAllocator",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "io.netty.buffer.AbstractReferenceCountedByteBuf",
    "fields": [{ "name": "refCnt" }]
  },
  {
    "name": "io.netty.channel.AbstractChannelHandlerContext",
    "fields": [{ "name": "handlerState" }]
  },
  {
    "name": "io.netty.channel.ChannelDuplexHandler",
    "methods": [
      {
        "name": "bind",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.net.SocketAddress",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "close",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "connect",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.net.SocketAddress",
          "java.net.SocketAddress",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "deregister",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "disconnect",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "flush",
        "parameterTypes": ["io.netty.channel.ChannelHandlerContext"]
      },
      {
        "name": "read",
        "parameterTypes": ["io.netty.channel.ChannelHandlerContext"]
      }
    ]
  },
  {
    "name": "io.netty.channel.ChannelInboundHandlerAdapter",
    "methods": [
      {
        "name": "channelActive",
        "parameterTypes": ["io.netty.channel.ChannelHandlerContext"]
      },
      {
        "name": "channelInactive",
        "parameterTypes": ["io.netty.channel.ChannelHandlerContext"]
      },
      {
        "name": "channelRead",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object"
        ]
      },
      {
        "name": "channelReadComplete",
        "parameterTypes": ["io.netty.channel.ChannelHandlerContext"]
      },
      {
        "name": "channelRegistered",
        "parameterTypes": ["io.netty.channel.ChannelHandlerContext"]
      },
      {
        "name": "channelUnregistered",
        "parameterTypes": ["io.netty.channel.ChannelHandlerContext"]
      },
      {
        "name": "channelWritabilityChanged",
        "parameterTypes": ["io.netty.channel.ChannelHandlerContext"]
      },
      {
        "name": "exceptionCaught",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Throwable"
        ]
      },
      {
        "name": "userEventTriggered",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "io.netty.channel.ChannelInitializer",
    "methods": [
      {
        "name": "channelRegistered",
        "parameterTypes": ["io.netty.channel.ChannelHandlerContext"]
      }
    ]
  },
  {
    "name": "io.netty.channel.ChannelOutboundBuffer",
    "fields": [{ "name": "totalPendingSize" }, { "name": "unwritable" }]
  },
  {
    "name": "io.netty.channel.CombinedChannelDuplexHandler",
    "methods": [
      {
        "name": "bind",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.net.SocketAddress",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "channelActive",
        "parameterTypes": ["io.netty.channel.ChannelHandlerContext"]
      },
      {
        "name": "channelInactive",
        "parameterTypes": ["io.netty.channel.ChannelHandlerContext"]
      },
      {
        "name": "channelRead",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object"
        ]
      },
      {
        "name": "channelReadComplete",
        "parameterTypes": ["io.netty.channel.ChannelHandlerContext"]
      },
      {
        "name": "channelRegistered",
        "parameterTypes": ["io.netty.channel.ChannelHandlerContext"]
      },
      {
        "name": "channelUnregistered",
        "parameterTypes": ["io.netty.channel.ChannelHandlerContext"]
      },
      {
        "name": "channelWritabilityChanged",
        "parameterTypes": ["io.netty.channel.ChannelHandlerContext"]
      },
      {
        "name": "close",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "connect",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.net.SocketAddress",
          "java.net.SocketAddress",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "deregister",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "disconnect",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "exceptionCaught",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Throwable"
        ]
      },
      {
        "name": "flush",
        "parameterTypes": ["io.netty.channel.ChannelHandlerContext"]
      },
      {
        "name": "read",
        "parameterTypes": ["io.netty.channel.ChannelHandlerContext"]
      },
      {
        "name": "userEventTriggered",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object"
        ]
      },
      {
        "name": "write",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object",
          "io.netty.channel.ChannelPromise"
        ]
      }
    ]
  },
  {
    "name": "io.netty.channel.DefaultChannelConfig",
    "fields": [{ "name": "autoRead" }, { "name": "writeBufferWaterMark" }]
  },
  {
    "name": "io.netty.channel.DefaultChannelPipeline",
    "fields": [{ "name": "estimatorHandle" }]
  },
  {
    "name": "io.netty.channel.DefaultChannelPipeline$HeadContext",
    "methods": [
      {
        "name": "bind",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.net.SocketAddress",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "channelActive",
        "parameterTypes": ["io.netty.channel.ChannelHandlerContext"]
      },
      {
        "name": "channelInactive",
        "parameterTypes": ["io.netty.channel.ChannelHandlerContext"]
      },
      {
        "name": "channelRead",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object"
        ]
      },
      {
        "name": "channelReadComplete",
        "parameterTypes": ["io.netty.channel.ChannelHandlerContext"]
      },
      {
        "name": "channelRegistered",
        "parameterTypes": ["io.netty.channel.ChannelHandlerContext"]
      },
      {
        "name": "channelUnregistered",
        "parameterTypes": ["io.netty.channel.ChannelHandlerContext"]
      },
      {
        "name": "channelWritabilityChanged",
        "parameterTypes": ["io.netty.channel.ChannelHandlerContext"]
      },
      {
        "name": "close",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "connect",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.net.SocketAddress",
          "java.net.SocketAddress",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "deregister",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "disconnect",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "exceptionCaught",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Throwable"
        ]
      },
      {
        "name": "flush",
        "parameterTypes": ["io.netty.channel.ChannelHandlerContext"]
      },
      {
        "name": "read",
        "parameterTypes": ["io.netty.channel.ChannelHandlerContext"]
      },
      {
        "name": "userEventTriggered",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object"
        ]
      },
      {
        "name": "write",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object",
          "io.netty.channel.ChannelPromise"
        ]
      }
    ]
  },
  {
    "name": "io.netty.channel.DefaultChannelPipeline$TailContext",
    "methods": [
      {
        "name": "channelActive",
        "parameterTypes": ["io.netty.channel.ChannelHandlerContext"]
      },
      {
        "name": "channelInactive",
        "parameterTypes": ["io.netty.channel.ChannelHandlerContext"]
      },
      {
        "name": "channelRead",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object"
        ]
      },
      {
        "name": "channelReadComplete",
        "parameterTypes": ["io.netty.channel.ChannelHandlerContext"]
      },
      {
        "name": "channelRegistered",
        "parameterTypes": ["io.netty.channel.ChannelHandlerContext"]
      },
      {
        "name": "channelUnregistered",
        "parameterTypes": ["io.netty.channel.ChannelHandlerContext"]
      },
      {
        "name": "channelWritabilityChanged",
        "parameterTypes": ["io.netty.channel.ChannelHandlerContext"]
      },
      {
        "name": "exceptionCaught",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Throwable"
        ]
      },
      {
        "name": "userEventTriggered",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "io.netty.channel.socket.nio.NioSocketChannel",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.netty.handler.codec.MessageAggregator",
    "methods": [
      {
        "name": "channelInactive",
        "parameterTypes": ["io.netty.channel.ChannelHandlerContext"]
      },
      {
        "name": "channelReadComplete",
        "parameterTypes": ["io.netty.channel.ChannelHandlerContext"]
      }
    ]
  },
  {
    "name": "io.netty.handler.codec.MessageToMessageDecoder",
    "methods": [
      {
        "name": "channelRead",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "io.netty.handler.codec.http.HttpClientCodec"
  },
  {
    "name": "io.netty.handler.codec.http.HttpClientUpgradeHandler",
    "methods": [
      {
        "name": "bind",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.net.SocketAddress",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "close",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "connect",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.net.SocketAddress",
          "java.net.SocketAddress",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "deregister",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "disconnect",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "flush",
        "parameterTypes": ["io.netty.channel.ChannelHandlerContext"]
      },
      {
        "name": "read",
        "parameterTypes": ["io.netty.channel.ChannelHandlerContext"]
      },
      {
        "name": "write",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object",
          "io.netty.channel.ChannelPromise"
        ]
      }
    ]
  },
  {
    "name": "io.netty.handler.codec.http.HttpContentDecoder",
    "methods": [
      {
        "name": "channelInactive",
        "parameterTypes": ["io.netty.channel.ChannelHandlerContext"]
      },
      {
        "name": "channelReadComplete",
        "parameterTypes": ["io.netty.channel.ChannelHandlerContext"]
      }
    ]
  },
  {
    "name": "io.netty.handler.codec.http.HttpContentDecompressor"
  },
  {
    "name": "io.netty.handler.timeout.IdleStateHandler",
    "methods": [
      {
        "name": "channelActive",
        "parameterTypes": ["io.netty.channel.ChannelHandlerContext"]
      },
      {
        "name": "channelInactive",
        "parameterTypes": ["io.netty.channel.ChannelHandlerContext"]
      },
      {
        "name": "channelRead",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object"
        ]
      },
      {
        "name": "channelReadComplete",
        "parameterTypes": ["io.netty.channel.ChannelHandlerContext"]
      },
      {
        "name": "channelRegistered",
        "parameterTypes": ["io.netty.channel.ChannelHandlerContext"]
      },
      {
        "name": "write",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object",
          "io.netty.channel.ChannelPromise"
        ]
      }
    ]
  },
  {
    "name": "io.netty.util.DefaultAttributeMap",
    "fields": [{ "name": "attributes" }]
  },
  {
    "name": "io.netty.util.Recycler$DefaultHandle",
    "fields": [{ "name": "state" }]
  },
  {
    "name": "io.netty.util.ReferenceCountUtil",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "io.netty.util.concurrent.DefaultPromise",
    "fields": [{ "name": "result" }]
  },
  {
    "name": "io.netty.util.concurrent.SingleThreadEventExecutor",
    "fields": [{ "name": "state" }, { "name": "threadProperties" }]
  },
  {
    "name": "io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueueColdProducerFields",
    "fields": [{ "name": "producerLimit" }]
  },
  {
    "name": "io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueueConsumerFields",
    "fields": [{ "name": "consumerIndex" }]
  },
  {
    "name": "io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueueProducerFields",
    "fields": [{ "name": "producerIndex" }]
  },
  {
    "name": "io.netty.util.internal.shaded.org.jctools.queues.unpadded.MpscUnpaddedArrayQueueConsumerIndexField",
    "fields": [{ "name": "consumerIndex" }]
  },
  {
    "name": "io.netty.util.internal.shaded.org.jctools.queues.unpadded.MpscUnpaddedArrayQueueProducerIndexField",
    "fields": [{ "name": "producerIndex" }]
  },
  {
    "name": "io.netty.util.internal.shaded.org.jctools.queues.unpadded.MpscUnpaddedArrayQueueProducerLimitField",
    "fields": [{ "name": "producerLimit" }]
  },
  {
    "name": "jakarta.servlet.Servlet"
  },
  {
    "name": "java.io.ObjectInputStream",
    "queryAllPublicMethods": true
  },
  {
    "name": "java.lang.BaseVirtualThread"
  },
  {
    "name": "java.lang.Boolean",
    "fields": [{ "name": "TYPE" }]
  },
  {
    "name": "java.lang.Byte",
    "fields": [{ "name": "TYPE" }]
  },
  {
    "name": "java.lang.Character",
    "fields": [{ "name": "TYPE" }]
  },
  {
    "name": "java.lang.Class",
    "methods": [
      { "name": "getRecordComponents", "parameterTypes": [] },
      { "name": "isRecord", "parameterTypes": [] }
    ]
  },
  {
    "name": "java.lang.Deprecated",
    "queryAllPublicMethods": true
  },
  {
    "name": "java.lang.Double",
    "fields": [{ "name": "TYPE" }]
  },
  {
    "name": "java.lang.Float",
    "fields": [{ "name": "TYPE" }]
  },
  {
    "name": "java.lang.Integer",
    "fields": [{ "name": "TYPE" }]
  },
  {
    "name": "java.lang.Long",
    "fields": [{ "name": "TYPE" }]
  },
  {
    "name": "java.lang.ProcessHandle",
    "methods": [
      { "name": "current", "parameterTypes": [] },
      { "name": "pid", "parameterTypes": [] }
    ]
  },
  {
    "name": "java.lang.Short",
    "fields": [{ "name": "TYPE" }]
  },
  {
    "name": "java.lang.StackTraceElement",
    "queryAllPublicMethods": true
  },
  {
    "name": "java.lang.String",
    "fields": [{ "name": "TYPE" }]
  },
  {
    "name": "java.lang.Thread",
    "fields": [{ "name": "threadLocalRandomProbe" }],
    "methods": [
      { "name": "getContextClassLoader", "parameterTypes": [] },
      { "name": "isVirtual", "parameterTypes": [] }
    ]
  },
  {
    "name": "java.lang.Void",
    "fields": [{ "name": "TYPE" }]
  },
  {
    "name": "java.lang.management.BufferPoolMXBean",
    "queryAllPublicMethods": true
  },
  {
    "name": "java.lang.management.ClassLoadingMXBean",
    "queryAllPublicMethods": true
  },
  {
    "name": "java.lang.management.CompilationMXBean",
    "queryAllPublicMethods": true
  },
  {
    "name": "java.lang.management.LockInfo",
    "queryAllPublicMethods": true
  },
  {
    "name": "java.lang.management.ManagementPermission",
    "methods": [{ "name": "<init>", "parameterTypes": ["java.lang.String"] }]
  },
  {
    "name": "java.lang.management.MemoryMXBean",
    "queryAllPublicMethods": true
  },
  {
    "name": "java.lang.management.MemoryManagerMXBean",
    "queryAllPublicMethods": true
  },
  {
    "name": "java.lang.management.MemoryPoolMXBean",
    "queryAllPublicMethods": true
  },
  {
    "name": "java.lang.management.MemoryUsage",
    "queryAllPublicMethods": true
  },
  {
    "name": "java.lang.management.MonitorInfo",
    "queryAllPublicMethods": true
  },
  {
    "name": "java.lang.management.PlatformLoggingMXBean",
    "queryAllPublicMethods": true,
    "methods": [
      { "name": "getLoggerLevel", "parameterTypes": ["java.lang.String"] },
      { "name": "getLoggerNames", "parameterTypes": [] },
      { "name": "getParentLoggerName", "parameterTypes": ["java.lang.String"] },
      {
        "name": "setLoggerLevel",
        "parameterTypes": ["java.lang.String", "java.lang.String"]
      }
    ]
  },
  {
    "name": "java.lang.management.RuntimeMXBean",
    "queryAllPublicMethods": true
  },
  {
    "name": "java.lang.management.ThreadInfo",
    "queryAllPublicMethods": true
  },
  {
    "name": "java.lang.reflect.RecordComponent",
    "methods": [
      { "name": "getName", "parameterTypes": [] },
      { "name": "getType", "parameterTypes": [] }
    ]
  },
  {
    "name": "java.math.BigDecimal"
  },
  {
    "name": "java.math.BigInteger"
  },
  {
    "name": "java.nio.Bits",
    "fields": [{ "name": "MAX_MEMORY" }, { "name": "UNALIGNED" }]
  },
  {
    "name": "java.nio.Buffer",
    "fields": [{ "name": "address" }]
  },
  {
    "name": "java.nio.ByteBuffer",
    "methods": [{ "name": "alignedSlice", "parameterTypes": ["int"] }]
  },
  {
    "name": "java.nio.DirectByteBuffer",
    "methods": [{ "name": "<init>", "parameterTypes": ["long", "long"] }]
  },
  {
    "name": "java.nio.channels.spi.SelectorProvider",
    "methods": [
      {
        "name": "openSocketChannel",
        "parameterTypes": ["java.net.ProtocolFamily"]
      }
    ]
  },
  {
    "name": "java.security.SecureRandomParameters"
  },
  {
    "name": "java.sql.Date"
  },
  {
    "name": "java.util.Date"
  },
  {
    "name": "java.util.PropertyPermission",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": ["java.lang.String", "java.lang.String"]
      }
    ]
  },
  {
    "name": "java.util.ServiceLoader",
    "methods": [
      {
        "name": "load",
        "parameterTypes": ["java.lang.Class", "java.lang.ClassLoader"]
      }
    ]
  },
  {
    "name": "java.util.concurrent.ForkJoinTask",
    "fields": [{ "name": "aux" }, { "name": "status" }]
  },
  {
    "name": "java.util.concurrent.atomic.AtomicBoolean",
    "fields": [{ "name": "value" }]
  },
  {
    "name": "java.util.concurrent.atomic.AtomicReference",
    "fields": [{ "name": "value" }]
  },
  {
    "name": "java.util.concurrent.atomic.Striped64",
    "fields": [{ "name": "base" }, { "name": "cellsBusy" }]
  },
  {
    "name": "java.util.logging.LogManager",
    "methods": [{ "name": "getLoggingMXBean", "parameterTypes": [] }]
  },
  {
    "name": "java.util.logging.LoggingMXBean",
    "queryAllPublicMethods": true
  },
  {
    "name": "javax.management.MBeanOperationInfo",
    "queryAllPublicMethods": true,
    "methods": [{ "name": "getSignature", "parameterTypes": [] }]
  },
  {
    "name": "javax.management.MBeanServerBuilder",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "javax.management.NotificationBroadcasterSupport",
    "methods": [{ "name": "getNotificationInfo", "parameterTypes": [] }]
  },
  {
    "name": "javax.management.ObjectName"
  },
  {
    "name": "javax.management.StandardEmitterMBean",
    "methods": [
      {
        "name": "cacheMBeanInfo",
        "parameterTypes": ["javax.management.MBeanInfo"]
      },
      { "name": "getCachedMBeanInfo", "parameterTypes": [] },
      { "name": "getMBeanInfo", "parameterTypes": [] }
    ]
  },
  {
    "name": "javax.management.openmbean.CompositeData"
  },
  {
    "name": "javax.management.openmbean.OpenMBeanOperationInfoSupport"
  },
  {
    "name": "javax.management.openmbean.TabularData"
  },
  {
    "name": "javax.servlet.Servlet"
  },
  {
    "name": "jdk.internal.misc.Unsafe",
    "methods": [{ "name": "getUnsafe", "parameterTypes": [] }]
  },
  {
    "name": "jdk.management.jfr.ConfigurationInfo",
    "queryAllPublicMethods": true
  },
  {
    "name": "jdk.management.jfr.EventTypeInfo",
    "queryAllPublicMethods": true
  },
  {
    "name": "jdk.management.jfr.FlightRecorderMXBean",
    "queryAllPublicMethods": true
  },
  {
    "name": "jdk.management.jfr.FlightRecorderMXBeanImpl",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "cacheMBeanInfo",
        "parameterTypes": ["javax.management.MBeanInfo"]
      },
      { "name": "getCachedMBeanInfo", "parameterTypes": [] },
      { "name": "getMBeanInfo", "parameterTypes": [] },
      { "name": "getNotificationInfo", "parameterTypes": [] }
    ]
  },
  {
    "name": "jdk.management.jfr.RecordingInfo",
    "queryAllPublicMethods": true
  },
  {
    "name": "jdk.management.jfr.SettingDescriptorInfo",
    "queryAllPublicMethods": true
  },
  {
    "name": "opennlp.tools.sentdetect.SentenceDetectorFactory",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.apache.commons.logging.LogFactory"
  },
  {
    "name": "org.apache.commons.logging.impl.Jdk14Logger",
    "methods": [
      { "name": "<init>", "parameterTypes": ["java.lang.String"] },
      {
        "name": "setLogFactory",
        "parameterTypes": ["org.apache.commons.logging.LogFactory"]
      }
    ]
  },
  {
    "name": "org.apache.commons.logging.impl.Log4JLogger"
  },
  {
    "name": "org.apache.commons.logging.impl.LogFactoryImpl",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.apache.commons.logging.impl.WeakHashtable",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.apache.commons.pool.impl.EvictionTimer"
  },
  {
    "name": "org.apache.logging.log4j.core.appender.AppenderSet"
  },
  {
    "name": "org.apache.logging.log4j.core.appender.AsyncAppender"
  },
  {
    "name": "org.apache.logging.log4j.core.appender.ConsoleAppender"
  },
  {
    "name": "org.apache.logging.log4j.core.appender.CountingNoOpAppender"
  },
  {
    "name": "org.apache.logging.log4j.core.appender.FailoverAppender"
  },
  {
    "name": "org.apache.logging.log4j.core.appender.FailoversPlugin"
  },
  {
    "name": "org.apache.logging.log4j.core.appender.FileAppender"
  },
  {
    "name": "org.apache.logging.log4j.core.appender.HttpAppender"
  },
  {
    "name": "org.apache.logging.log4j.core.appender.MemoryMappedFileAppender"
  },
  {
    "name": "org.apache.logging.log4j.core.appender.NullAppender"
  },
  {
    "name": "org.apache.logging.log4j.core.appender.OutputStreamAppender"
  },
  {
    "name": "org.apache.logging.log4j.core.appender.RandomAccessFileAppender"
  },
  {
    "name": "org.apache.logging.log4j.core.appender.RollingFileAppender"
  },
  {
    "name": "org.apache.logging.log4j.core.appender.RollingRandomAccessFileAppender"
  },
  {
    "name": "org.apache.logging.log4j.core.appender.ScriptAppenderSelector"
  },
  {
    "name": "org.apache.logging.log4j.core.appender.SmtpAppender"
  },
  {
    "name": "org.apache.logging.log4j.core.appender.SocketAppender"
  },
  {
    "name": "org.apache.logging.log4j.core.appender.SyslogAppender"
  },
  {
    "name": "org.apache.logging.log4j.core.appender.WriterAppender"
  },
  {
    "name": "org.apache.logging.log4j.core.appender.db.ColumnMapping"
  },
  {
    "name": "org.apache.logging.log4j.core.appender.db.jdbc.ColumnConfig"
  },
  {
    "name": "org.apache.logging.log4j.core.appender.db.jdbc.DataSourceConnectionSource"
  },
  {
    "name": "org.apache.logging.log4j.core.appender.db.jdbc.DriverManagerConnectionSource"
  },
  {
    "name": "org.apache.logging.log4j.core.appender.db.jdbc.FactoryMethodConnectionSource"
  },
  {
    "name": "org.apache.logging.log4j.core.appender.db.jdbc.JdbcAppender"
  },
  {
    "name": "org.apache.logging.log4j.core.appender.mom.JmsAppender"
  },
  {
    "name": "org.apache.logging.log4j.core.appender.mom.jeromq.JeroMqAppender"
  },
  {
    "name": "org.apache.logging.log4j.core.appender.mom.kafka.KafkaAppender"
  },
  {
    "name": "org.apache.logging.log4j.core.appender.nosql.NoSqlAppender"
  },
  {
    "name": "org.apache.logging.log4j.core.appender.rewrite.LoggerNameLevelRewritePolicy"
  },
  {
    "name": "org.apache.logging.log4j.core.appender.rewrite.MapRewritePolicy"
  },
  {
    "name": "org.apache.logging.log4j.core.appender.rewrite.PropertiesRewritePolicy"
  },
  {
    "name": "org.apache.logging.log4j.core.appender.rewrite.RewriteAppender"
  },
  {
    "name": "org.apache.logging.log4j.core.appender.rolling.CompositeTriggeringPolicy"
  },
  {
    "name": "org.apache.logging.log4j.core.appender.rolling.CronTriggeringPolicy"
  },
  {
    "name": "org.apache.logging.log4j.core.appender.rolling.DefaultRolloverStrategy"
  },
  {
    "name": "org.apache.logging.log4j.core.appender.rolling.DirectWriteRolloverStrategy"
  },
  {
    "name": "org.apache.logging.log4j.core.appender.rolling.NoOpTriggeringPolicy"
  },
  {
    "name": "org.apache.logging.log4j.core.appender.rolling.OnStartupTriggeringPolicy"
  },
  {
    "name": "org.apache.logging.log4j.core.appender.rolling.SizeBasedTriggeringPolicy"
  },
  {
    "name": "org.apache.logging.log4j.core.appender.rolling.TimeBasedTriggeringPolicy"
  },
  {
    "name": "org.apache.logging.log4j.core.appender.rolling.action.DeleteAction"
  },
  {
    "name": "org.apache.logging.log4j.core.appender.rolling.action.IfAccumulatedFileCount"
  },
  {
    "name": "org.apache.logging.log4j.core.appender.rolling.action.IfAccumulatedFileSize"
  },
  {
    "name": "org.apache.logging.log4j.core.appender.rolling.action.IfAll"
  },
  {
    "name": "org.apache.logging.log4j.core.appender.rolling.action.IfAny"
  },
  {
    "name": "org.apache.logging.log4j.core.appender.rolling.action.IfFileName"
  },
  {
    "name": "org.apache.logging.log4j.core.appender.rolling.action.IfLastModified"
  },
  {
    "name": "org.apache.logging.log4j.core.appender.rolling.action.IfNot"
  },
  {
    "name": "org.apache.logging.log4j.core.appender.rolling.action.PathSortByModificationTime"
  },
  {
    "name": "org.apache.logging.log4j.core.appender.rolling.action.PosixViewAttributeAction"
  },
  {
    "name": "org.apache.logging.log4j.core.appender.rolling.action.ScriptCondition"
  },
  {
    "name": "org.apache.logging.log4j.core.appender.routing.IdlePurgePolicy"
  },
  {
    "name": "org.apache.logging.log4j.core.appender.routing.Route"
  },
  {
    "name": "org.apache.logging.log4j.core.appender.routing.Routes"
  },
  {
    "name": "org.apache.logging.log4j.core.appender.routing.RoutingAppender"
  },
  {
    "name": "org.apache.logging.log4j.core.async.ArrayBlockingQueueFactory"
  },
  {
    "name": "org.apache.logging.log4j.core.async.AsyncLoggerConfig"
  },
  {
    "name": "org.apache.logging.log4j.core.async.AsyncLoggerConfig$RootLogger"
  },
  {
    "name": "org.apache.logging.log4j.core.async.AsyncWaitStrategyFactoryConfig"
  },
  {
    "name": "org.apache.logging.log4j.core.async.DisruptorBlockingQueueFactory"
  },
  {
    "name": "org.apache.logging.log4j.core.async.JCToolsBlockingQueueFactory"
  },
  {
    "name": "org.apache.logging.log4j.core.async.LinkedTransferQueueFactory"
  },
  {
    "name": "org.apache.logging.log4j.core.config.AppenderControlArraySet",
    "fields": [{ "name": "appenderArray" }]
  },
  {
    "name": "org.apache.logging.log4j.core.config.AppenderRef"
  },
  {
    "name": "org.apache.logging.log4j.core.config.AppendersPlugin"
  },
  {
    "name": "org.apache.logging.log4j.core.config.CustomLevelConfig"
  },
  {
    "name": "org.apache.logging.log4j.core.config.CustomLevels"
  },
  {
    "name": "org.apache.logging.log4j.core.config.DefaultAdvertiser"
  },
  {
    "name": "org.apache.logging.log4j.core.config.HttpWatcher"
  },
  {
    "name": "org.apache.logging.log4j.core.config.LoggerConfig"
  },
  {
    "name": "org.apache.logging.log4j.core.config.LoggerConfig$RootLogger"
  },
  {
    "name": "org.apache.logging.log4j.core.config.LoggersPlugin"
  },
  {
    "name": "org.apache.logging.log4j.core.config.PropertiesPlugin"
  },
  {
    "name": "org.apache.logging.log4j.core.config.Property"
  },
  {
    "name": "org.apache.logging.log4j.core.config.ScriptsPlugin"
  },
  {
    "name": "org.apache.logging.log4j.core.config.arbiters.ClassArbiter"
  },
  {
    "name": "org.apache.logging.log4j.core.config.arbiters.DefaultArbiter"
  },
  {
    "name": "org.apache.logging.log4j.core.config.arbiters.EnvironmentArbiter"
  },
  {
    "name": "org.apache.logging.log4j.core.config.arbiters.ScriptArbiter"
  },
  {
    "name": "org.apache.logging.log4j.core.config.arbiters.SelectArbiter"
  },
  {
    "name": "org.apache.logging.log4j.core.config.arbiters.SystemPropertyArbiter"
  },
  {
    "name": "org.apache.logging.log4j.core.config.json.JsonConfigurationFactory",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.apache.logging.log4j.core.config.plugins.convert.TypeConverters$BigDecimalConverter"
  },
  {
    "name": "org.apache.logging.log4j.core.config.plugins.convert.TypeConverters$BigIntegerConverter"
  },
  {
    "name": "org.apache.logging.log4j.core.config.plugins.convert.TypeConverters$BooleanConverter"
  },
  {
    "name": "org.apache.logging.log4j.core.config.plugins.convert.TypeConverters$ByteArrayConverter"
  },
  {
    "name": "org.apache.logging.log4j.core.config.plugins.convert.TypeConverters$ByteConverter"
  },
  {
    "name": "org.apache.logging.log4j.core.config.plugins.convert.TypeConverters$CharArrayConverter"
  },
  {
    "name": "org.apache.logging.log4j.core.config.plugins.convert.TypeConverters$CharacterConverter"
  },
  {
    "name": "org.apache.logging.log4j.core.config.plugins.convert.TypeConverters$CharsetConverter"
  },
  {
    "name": "org.apache.logging.log4j.core.config.plugins.convert.TypeConverters$ClassConverter"
  },
  {
    "name": "org.apache.logging.log4j.core.config.plugins.convert.TypeConverters$CronExpressionConverter"
  },
  {
    "name": "org.apache.logging.log4j.core.config.plugins.convert.TypeConverters$DoubleConverter"
  },
  {
    "name": "org.apache.logging.log4j.core.config.plugins.convert.TypeConverters$DurationConverter"
  },
  {
    "name": "org.apache.logging.log4j.core.config.plugins.convert.TypeConverters$FileConverter"
  },
  {
    "name": "org.apache.logging.log4j.core.config.plugins.convert.TypeConverters$FloatConverter"
  },
  {
    "name": "org.apache.logging.log4j.core.config.plugins.convert.TypeConverters$InetAddressConverter"
  },
  {
    "name": "org.apache.logging.log4j.core.config.plugins.convert.TypeConverters$IntegerConverter"
  },
  {
    "name": "org.apache.logging.log4j.core.config.plugins.convert.TypeConverters$LevelConverter"
  },
  {
    "name": "org.apache.logging.log4j.core.config.plugins.convert.TypeConverters$LongConverter"
  },
  {
    "name": "org.apache.logging.log4j.core.config.plugins.convert.TypeConverters$PathConverter"
  },
  {
    "name": "org.apache.logging.log4j.core.config.plugins.convert.TypeConverters$PatternConverter"
  },
  {
    "name": "org.apache.logging.log4j.core.config.plugins.convert.TypeConverters$SecurityProviderConverter"
  },
  {
    "name": "org.apache.logging.log4j.core.config.plugins.convert.TypeConverters$ShortConverter"
  },
  {
    "name": "org.apache.logging.log4j.core.config.plugins.convert.TypeConverters$StringConverter"
  },
  {
    "name": "org.apache.logging.log4j.core.config.plugins.convert.TypeConverters$UriConverter"
  },
  {
    "name": "org.apache.logging.log4j.core.config.plugins.convert.TypeConverters$UrlConverter"
  },
  {
    "name": "org.apache.logging.log4j.core.config.plugins.convert.TypeConverters$UuidConverter"
  },
  {
    "name": "org.apache.logging.log4j.core.config.properties.PropertiesConfigurationFactory",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.apache.logging.log4j.core.config.xml.XmlConfigurationFactory",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.apache.logging.log4j.core.config.yaml.YamlConfigurationFactory",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.apache.logging.log4j.core.filter.BurstFilter"
  },
  {
    "name": "org.apache.logging.log4j.core.filter.CompositeFilter"
  },
  {
    "name": "org.apache.logging.log4j.core.filter.DenyAllFilter"
  },
  {
    "name": "org.apache.logging.log4j.core.filter.DynamicThresholdFilter"
  },
  {
    "name": "org.apache.logging.log4j.core.filter.LevelMatchFilter"
  },
  {
    "name": "org.apache.logging.log4j.core.filter.LevelRangeFilter"
  },
  {
    "name": "org.apache.logging.log4j.core.filter.MapFilter"
  },
  {
    "name": "org.apache.logging.log4j.core.filter.MarkerFilter"
  },
  {
    "name": "org.apache.logging.log4j.core.filter.MutableThreadContextMapFilter"
  },
  {
    "name": "org.apache.logging.log4j.core.filter.NoMarkerFilter"
  },
  {
    "name": "org.apache.logging.log4j.core.filter.RegexFilter"
  },
  {
    "name": "org.apache.logging.log4j.core.filter.ScriptFilter"
  },
  {
    "name": "org.apache.logging.log4j.core.filter.StringMatchFilter"
  },
  {
    "name": "org.apache.logging.log4j.core.filter.StructuredDataFilter"
  },
  {
    "name": "org.apache.logging.log4j.core.filter.ThreadContextMapFilter"
  },
  {
    "name": "org.apache.logging.log4j.core.filter.ThresholdFilter"
  },
  {
    "name": "org.apache.logging.log4j.core.filter.TimeFilter"
  },
  {
    "name": "org.apache.logging.log4j.core.impl.Log4jContextFactory",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.apache.logging.log4j.core.jmx.AppenderAdmin",
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.apache.logging.log4j.core.jmx.AppenderAdminMBean",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.apache.logging.log4j.core.jmx.ContextSelectorAdmin",
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.apache.logging.log4j.core.jmx.ContextSelectorAdminMBean",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.apache.logging.log4j.core.jmx.LoggerContextAdmin",
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.apache.logging.log4j.core.jmx.LoggerContextAdminMBean",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.apache.logging.log4j.core.jmx.StatusLoggerAdmin",
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.apache.logging.log4j.core.jmx.StatusLoggerAdminMBean",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.apache.logging.log4j.core.layout.CsvLogEventLayout"
  },
  {
    "name": "org.apache.logging.log4j.core.layout.CsvParameterLayout"
  },
  {
    "name": "org.apache.logging.log4j.core.layout.GelfLayout"
  },
  {
    "name": "org.apache.logging.log4j.core.layout.HtmlLayout"
  },
  {
    "name": "org.apache.logging.log4j.core.layout.JsonLayout"
  },
  {
    "name": "org.apache.logging.log4j.core.layout.LevelPatternSelector"
  },
  {
    "name": "org.apache.logging.log4j.core.layout.LoggerFields"
  },
  {
    "name": "org.apache.logging.log4j.core.layout.MarkerPatternSelector"
  },
  {
    "name": "org.apache.logging.log4j.core.layout.MessageLayout"
  },
  {
    "name": "org.apache.logging.log4j.core.layout.PatternLayout"
  },
  {
    "name": "org.apache.logging.log4j.core.layout.PatternMatch"
  },
  {
    "name": "org.apache.logging.log4j.core.layout.Rfc5424Layout"
  },
  {
    "name": "org.apache.logging.log4j.core.layout.ScriptPatternSelector"
  },
  {
    "name": "org.apache.logging.log4j.core.layout.SerializedLayout"
  },
  {
    "name": "org.apache.logging.log4j.core.layout.SyslogLayout"
  },
  {
    "name": "org.apache.logging.log4j.core.layout.XmlLayout"
  },
  {
    "name": "org.apache.logging.log4j.core.layout.YamlLayout"
  },
  {
    "name": "org.apache.logging.log4j.core.lookup.ContextMapLookup",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.apache.logging.log4j.core.lookup.DateLookup",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.apache.logging.log4j.core.lookup.EnvironmentLookup",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.apache.logging.log4j.core.lookup.EventLookup",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.apache.logging.log4j.core.lookup.JavaLookup",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.apache.logging.log4j.core.lookup.JmxRuntimeInputArgumentsLookup",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.apache.logging.log4j.core.lookup.JndiLookup"
  },
  {
    "name": "org.apache.logging.log4j.core.lookup.Log4jLookup",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.apache.logging.log4j.core.lookup.LowerLookup",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.apache.logging.log4j.core.lookup.MainMapLookup",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.apache.logging.log4j.core.lookup.MapLookup",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.apache.logging.log4j.core.lookup.MarkerLookup",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.apache.logging.log4j.core.lookup.ResourceBundleLookup",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.apache.logging.log4j.core.lookup.StructuredDataLookup",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.apache.logging.log4j.core.lookup.SystemPropertiesLookup",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.apache.logging.log4j.core.lookup.UpperLookup",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.apache.logging.log4j.core.net.MulticastDnsAdvertiser"
  },
  {
    "name": "org.apache.logging.log4j.core.net.SocketAddress"
  },
  {
    "name": "org.apache.logging.log4j.core.net.SocketOptions"
  },
  {
    "name": "org.apache.logging.log4j.core.net.SocketPerformancePreferences"
  },
  {
    "name": "org.apache.logging.log4j.core.net.ssl.KeyStoreConfiguration"
  },
  {
    "name": "org.apache.logging.log4j.core.net.ssl.SslConfiguration"
  },
  {
    "name": "org.apache.logging.log4j.core.net.ssl.TrustStoreConfiguration"
  },
  {
    "name": "org.apache.logging.log4j.core.pattern.AbstractStyleNameConverter$Black"
  },
  {
    "name": "org.apache.logging.log4j.core.pattern.AbstractStyleNameConverter$Blue"
  },
  {
    "name": "org.apache.logging.log4j.core.pattern.AbstractStyleNameConverter$Cyan"
  },
  {
    "name": "org.apache.logging.log4j.core.pattern.AbstractStyleNameConverter$Green"
  },
  {
    "name": "org.apache.logging.log4j.core.pattern.AbstractStyleNameConverter$Magenta"
  },
  {
    "name": "org.apache.logging.log4j.core.pattern.AbstractStyleNameConverter$Red"
  },
  {
    "name": "org.apache.logging.log4j.core.pattern.AbstractStyleNameConverter$White"
  },
  {
    "name": "org.apache.logging.log4j.core.pattern.AbstractStyleNameConverter$Yellow"
  },
  {
    "name": "org.apache.logging.log4j.core.pattern.ClassNamePatternConverter"
  },
  {
    "name": "org.apache.logging.log4j.core.pattern.DatePatternConverter",
    "queryAllDeclaredMethods": true,
    "methods": [
      { "name": "newInstance", "parameterTypes": ["java.lang.String[]"] }
    ]
  },
  {
    "name": "org.apache.logging.log4j.core.pattern.EncodingPatternConverter"
  },
  {
    "name": "org.apache.logging.log4j.core.pattern.EndOfBatchPatternConverter"
  },
  {
    "name": "org.apache.logging.log4j.core.pattern.EqualsIgnoreCaseReplacementConverter"
  },
  {
    "name": "org.apache.logging.log4j.core.pattern.EqualsReplacementConverter"
  },
  {
    "name": "org.apache.logging.log4j.core.pattern.ExtendedThrowablePatternConverter"
  },
  {
    "name": "org.apache.logging.log4j.core.pattern.FileDatePatternConverter"
  },
  {
    "name": "org.apache.logging.log4j.core.pattern.FileLocationPatternConverter"
  },
  {
    "name": "org.apache.logging.log4j.core.pattern.FullLocationPatternConverter"
  },
  {
    "name": "org.apache.logging.log4j.core.pattern.HighlightConverter"
  },
  {
    "name": "org.apache.logging.log4j.core.pattern.IntegerPatternConverter"
  },
  {
    "name": "org.apache.logging.log4j.core.pattern.LevelPatternConverter",
    "queryAllDeclaredMethods": true,
    "methods": [
      { "name": "newInstance", "parameterTypes": ["java.lang.String[]"] }
    ]
  },
  {
    "name": "org.apache.logging.log4j.core.pattern.LineLocationPatternConverter"
  },
  {
    "name": "org.apache.logging.log4j.core.pattern.LineSeparatorPatternConverter",
    "queryAllDeclaredMethods": true,
    "methods": [
      { "name": "newInstance", "parameterTypes": ["java.lang.String[]"] }
    ]
  },
  {
    "name": "org.apache.logging.log4j.core.pattern.LoggerFqcnPatternConverter"
  },
  {
    "name": "org.apache.logging.log4j.core.pattern.LoggerPatternConverter",
    "queryAllDeclaredMethods": true,
    "methods": [
      { "name": "newInstance", "parameterTypes": ["java.lang.String[]"] }
    ]
  },
  {
    "name": "org.apache.logging.log4j.core.pattern.MapPatternConverter"
  },
  {
    "name": "org.apache.logging.log4j.core.pattern.MarkerPatternConverter"
  },
  {
    "name": "org.apache.logging.log4j.core.pattern.MarkerSimpleNamePatternConverter"
  },
  {
    "name": "org.apache.logging.log4j.core.pattern.MaxLengthConverter"
  },
  {
    "name": "org.apache.logging.log4j.core.pattern.MdcPatternConverter"
  },
  {
    "name": "org.apache.logging.log4j.core.pattern.MessagePatternConverter",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "newInstance",
        "parameterTypes": [
          "org.apache.logging.log4j.core.config.Configuration",
          "java.lang.String[]"
        ]
      }
    ]
  },
  {
    "name": "org.apache.logging.log4j.core.pattern.MethodLocationPatternConverter"
  },
  {
    "name": "org.apache.logging.log4j.core.pattern.NanoTimePatternConverter"
  },
  {
    "name": "org.apache.logging.log4j.core.pattern.NdcPatternConverter"
  },
  {
    "name": "org.apache.logging.log4j.core.pattern.ProcessIdPatternConverter"
  },
  {
    "name": "org.apache.logging.log4j.core.pattern.RegexReplacement"
  },
  {
    "name": "org.apache.logging.log4j.core.pattern.RegexReplacementConverter"
  },
  {
    "name": "org.apache.logging.log4j.core.pattern.RelativeTimePatternConverter"
  },
  {
    "name": "org.apache.logging.log4j.core.pattern.RepeatPatternConverter"
  },
  {
    "name": "org.apache.logging.log4j.core.pattern.RootThrowablePatternConverter"
  },
  {
    "name": "org.apache.logging.log4j.core.pattern.SequenceNumberPatternConverter"
  },
  {
    "name": "org.apache.logging.log4j.core.pattern.StyleConverter"
  },
  {
    "name": "org.apache.logging.log4j.core.pattern.ThreadIdPatternConverter"
  },
  {
    "name": "org.apache.logging.log4j.core.pattern.ThreadNamePatternConverter",
    "queryAllDeclaredMethods": true,
    "methods": [
      { "name": "newInstance", "parameterTypes": ["java.lang.String[]"] }
    ]
  },
  {
    "name": "org.apache.logging.log4j.core.pattern.ThreadPriorityPatternConverter"
  },
  {
    "name": "org.apache.logging.log4j.core.pattern.ThrowablePatternConverter"
  },
  {
    "name": "org.apache.logging.log4j.core.pattern.UuidPatternConverter"
  },
  {
    "name": "org.apache.logging.log4j.core.pattern.VariablesNotEmptyReplacementConverter"
  },
  {
    "name": "org.apache.logging.log4j.core.script.Script"
  },
  {
    "name": "org.apache.logging.log4j.core.script.ScriptFile"
  },
  {
    "name": "org.apache.logging.log4j.core.script.ScriptRef"
  },
  {
    "name": "org.apache.logging.log4j.core.util.KeyValuePair"
  },
  {
    "name": "org.apache.logging.log4j.message.DefaultFlowMessageFactory",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.apache.logging.log4j.message.ReusableMessageFactory",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.apache.logging.log4j.util.internal.DefaultObjectInputFilter",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.apache.tika.detect.microsoft.POIFSContainerDetector",
    "methods": [
      { "name": "<init>", "parameterTypes": [] },
      {
        "name": "<init>",
        "parameterTypes": ["org.apache.tika.config.ServiceLoader"]
      }
    ]
  },
  {
    "name": "org.apache.tika.detect.microsoft.ooxml.OPCPackageDetector",
    "methods": [
      { "name": "<init>", "parameterTypes": [] },
      {
        "name": "<init>",
        "parameterTypes": ["org.apache.tika.config.ServiceLoader"]
      }
    ]
  },
  {
    "name": "org.apache.tika.detect.zip.DefaultZipContainerDetector",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": ["org.apache.tika.config.ServiceLoader"]
      }
    ]
  },
  {
    "name": "org.apache.tika.detect.zip.FrictionlessPackageDetector",
    "methods": [
      { "name": "<init>", "parameterTypes": [] },
      {
        "name": "<init>",
        "parameterTypes": ["org.apache.tika.config.ServiceLoader"]
      }
    ]
  },
  {
    "name": "org.apache.tika.detect.zip.IPADetector",
    "methods": [
      { "name": "<init>", "parameterTypes": [] },
      {
        "name": "<init>",
        "parameterTypes": ["org.apache.tika.config.ServiceLoader"]
      }
    ]
  },
  {
    "name": "org.apache.tika.detect.zip.JarDetector",
    "methods": [
      { "name": "<init>", "parameterTypes": [] },
      {
        "name": "<init>",
        "parameterTypes": ["org.apache.tika.config.ServiceLoader"]
      }
    ]
  },
  {
    "name": "org.apache.tika.detect.zip.KMZDetector",
    "methods": [
      { "name": "<init>", "parameterTypes": [] },
      {
        "name": "<init>",
        "parameterTypes": ["org.apache.tika.config.ServiceLoader"]
      }
    ]
  },
  {
    "name": "org.apache.tika.detect.zip.OpenDocumentDetector",
    "methods": [
      { "name": "<init>", "parameterTypes": [] },
      {
        "name": "<init>",
        "parameterTypes": ["org.apache.tika.config.ServiceLoader"]
      }
    ]
  },
  {
    "name": "org.apache.tika.detect.zip.StarOfficeDetector",
    "methods": [
      { "name": "<init>", "parameterTypes": [] },
      {
        "name": "<init>",
        "parameterTypes": ["org.apache.tika.config.ServiceLoader"]
      }
    ]
  },
  {
    "name": "org.apache.tika.parser.microsoft.EMFParser",
    "methods": [
      { "name": "<init>", "parameterTypes": [] },
      {
        "name": "<init>",
        "parameterTypes": ["org.apache.tika.config.ServiceLoader"]
      }
    ]
  },
  {
    "name": "org.apache.tika.parser.microsoft.JackcessParser",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": ["org.apache.tika.config.ServiceLoader"]
      }
    ]
  },
  {
    "name": "org.apache.tika.parser.microsoft.MSOwnerFileParser",
    "methods": [
      { "name": "<init>", "parameterTypes": [] },
      {
        "name": "<init>",
        "parameterTypes": ["org.apache.tika.config.ServiceLoader"]
      }
    ]
  },
  {
    "name": "org.apache.tika.parser.microsoft.OfficeParser",
    "methods": [
      { "name": "<init>", "parameterTypes": [] },
      {
        "name": "<init>",
        "parameterTypes": ["org.apache.tika.config.ServiceLoader"]
      }
    ]
  },
  {
    "name": "org.apache.tika.parser.microsoft.OldExcelParser",
    "methods": [
      { "name": "<init>", "parameterTypes": [] },
      {
        "name": "<init>",
        "parameterTypes": ["org.apache.tika.config.ServiceLoader"]
      }
    ]
  },
  {
    "name": "org.apache.tika.parser.microsoft.TNEFParser",
    "methods": [
      { "name": "<init>", "parameterTypes": [] },
      {
        "name": "<init>",
        "parameterTypes": ["org.apache.tika.config.ServiceLoader"]
      }
    ]
  },
  {
    "name": "org.apache.tika.parser.microsoft.WMFParser",
    "methods": [
      { "name": "<init>", "parameterTypes": [] },
      {
        "name": "<init>",
        "parameterTypes": ["org.apache.tika.config.ServiceLoader"]
      }
    ]
  },
  {
    "name": "org.apache.tika.parser.microsoft.activemime.ActiveMimeParser",
    "methods": [
      { "name": "<init>", "parameterTypes": [] },
      {
        "name": "<init>",
        "parameterTypes": ["org.apache.tika.config.ServiceLoader"]
      }
    ]
  },
  {
    "name": "org.apache.tika.parser.microsoft.chm.ChmParser",
    "methods": [
      { "name": "<init>", "parameterTypes": [] },
      {
        "name": "<init>",
        "parameterTypes": ["org.apache.tika.config.ServiceLoader"]
      }
    ]
  },
  {
    "name": "org.apache.tika.parser.microsoft.onenote.OneNoteParser",
    "methods": [
      { "name": "<init>", "parameterTypes": [] },
      {
        "name": "<init>",
        "parameterTypes": ["org.apache.tika.config.ServiceLoader"]
      }
    ]
  },
  {
    "name": "org.apache.tika.parser.microsoft.ooxml.OOXMLParser",
    "methods": [
      { "name": "<init>", "parameterTypes": [] },
      {
        "name": "<init>",
        "parameterTypes": ["org.apache.tika.config.ServiceLoader"]
      }
    ]
  },
  {
    "name": "org.apache.tika.parser.microsoft.ooxml.xwpf.ml2006.Word2006MLParser",
    "methods": [
      { "name": "<init>", "parameterTypes": [] },
      {
        "name": "<init>",
        "parameterTypes": ["org.apache.tika.config.ServiceLoader"]
      }
    ]
  },
  {
    "name": "org.apache.tika.parser.microsoft.pst.OutlookPSTParser",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": ["org.apache.tika.config.ServiceLoader"]
      }
    ]
  },
  {
    "name": "org.apache.tika.parser.microsoft.rtf.RTFParser",
    "methods": [
      { "name": "<init>", "parameterTypes": [] },
      {
        "name": "<init>",
        "parameterTypes": ["org.apache.tika.config.ServiceLoader"]
      }
    ]
  },
  {
    "name": "org.apache.tika.parser.microsoft.xml.SpreadsheetMLParser",
    "methods": [
      { "name": "<init>", "parameterTypes": [] },
      {
        "name": "<init>",
        "parameterTypes": ["org.apache.tika.config.ServiceLoader"]
      }
    ]
  },
  {
    "name": "org.apache.tika.parser.microsoft.xml.WordMLParser",
    "methods": [
      { "name": "<init>", "parameterTypes": [] },
      {
        "name": "<init>",
        "parameterTypes": ["org.apache.tika.config.ServiceLoader"]
      }
    ]
  },
  {
    "name": "org.apache.tika.parser.pdf.PDFParser",
    "methods": [
      { "name": "<init>", "parameterTypes": [] },
      {
        "name": "<init>",
        "parameterTypes": ["org.apache.tika.config.ServiceLoader"]
      }
    ]
  },
  {
    "name": "org.apache.xerces.util.SecurityManager"
  },
  {
    "name": "org.apache.xmlbeans.metadata.system.sXMLCONFIG.TypeSystemHolder",
    "fields": [{ "name": "typeSystem" }]
  },
  {
    "name": "org.apache.xmlbeans.metadata.system.sXMLLANG.TypeSystemHolder",
    "fields": [{ "name": "typeSystem" }]
  },
  {
    "name": "org.apache.xmlbeans.metadata.system.sXMLSCHEMA.TypeSystemHolder",
    "fields": [{ "name": "typeSystem" }]
  },
  {
    "name": "org.apache.xmlbeans.metadata.system.sXMLTOOLS.TypeSystemHolder",
    "fields": [{ "name": "typeSystem" }]
  },
  {
    "name": "org.ballerinalang.test.runtime.entity.Test",
    "allDeclaredFields": true,
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.ballerinalang.test.runtime.entity.TestGroup",
    "allDeclaredFields": true,
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.ballerinalang.test.runtime.entity.TestSuite",
    "allDeclaredFields": true,
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.openxmlformats.schemas.drawingml.x2006.main.CTNonVisualDrawingProps"
  },
  {
    "name": "org.openxmlformats.schemas.drawingml.x2006.main.impl.CTGroupShapePropertiesImpl",
    "methods": [
      { "name": "<init>", "parameterTypes": ["org.apache.xmlbeans.SchemaType"] }
    ]
  },
  {
    "name": "org.openxmlformats.schemas.drawingml.x2006.main.impl.CTNonVisualDrawingPropsImpl",
    "methods": [
      { "name": "<init>", "parameterTypes": ["org.apache.xmlbeans.SchemaType"] }
    ]
  },
  {
    "name": "org.openxmlformats.schemas.drawingml.x2006.main.impl.CTNonVisualDrawingShapePropsImpl",
    "methods": [
      { "name": "<init>", "parameterTypes": ["org.apache.xmlbeans.SchemaType"] }
    ]
  },
  {
    "name": "org.openxmlformats.schemas.drawingml.x2006.main.impl.CTOfficeStyleSheetImpl",
    "methods": [
      { "name": "<init>", "parameterTypes": ["org.apache.xmlbeans.SchemaType"] }
    ]
  },
  {
    "name": "org.openxmlformats.schemas.drawingml.x2006.main.impl.CTOuterShadowEffectImpl",
    "methods": [
      { "name": "<init>", "parameterTypes": ["org.apache.xmlbeans.SchemaType"] }
    ]
  },
  {
    "name": "org.openxmlformats.schemas.drawingml.x2006.main.impl.CTRegularTextRunImpl",
    "methods": [
      { "name": "<init>", "parameterTypes": ["org.apache.xmlbeans.SchemaType"] }
    ]
  },
  {
    "name": "org.openxmlformats.schemas.drawingml.x2006.main.impl.CTShapePropertiesImpl",
    "methods": [
      { "name": "<init>", "parameterTypes": ["org.apache.xmlbeans.SchemaType"] }
    ]
  },
  {
    "name": "org.openxmlformats.schemas.drawingml.x2006.main.impl.CTTextBodyImpl",
    "methods": [
      { "name": "<init>", "parameterTypes": ["org.apache.xmlbeans.SchemaType"] }
    ]
  },
  {
    "name": "org.openxmlformats.schemas.drawingml.x2006.main.impl.CTTextCharacterPropertiesImpl",
    "methods": [
      { "name": "<init>", "parameterTypes": ["org.apache.xmlbeans.SchemaType"] }
    ]
  },
  {
    "name": "org.openxmlformats.schemas.drawingml.x2006.main.impl.CTTextFieldImpl",
    "methods": [
      { "name": "<init>", "parameterTypes": ["org.apache.xmlbeans.SchemaType"] }
    ]
  },
  {
    "name": "org.openxmlformats.schemas.drawingml.x2006.main.impl.CTTextParagraphImpl",
    "methods": [
      { "name": "<init>", "parameterTypes": ["org.apache.xmlbeans.SchemaType"] }
    ]
  },
  {
    "name": "org.openxmlformats.schemas.drawingml.x2006.main.impl.CTTextParagraphPropertiesImpl",
    "methods": [
      { "name": "<init>", "parameterTypes": ["org.apache.xmlbeans.SchemaType"] }
    ]
  },
  {
    "name": "org.openxmlformats.schemas.drawingml.x2006.main.impl.STDrawingElementIdImpl",
    "methods": [
      { "name": "<init>", "parameterTypes": ["org.apache.xmlbeans.SchemaType"] }
    ]
  },
  {
    "name": "org.openxmlformats.schemas.drawingml.x2006.main.impl.ThemeDocumentImpl",
    "methods": [
      { "name": "<init>", "parameterTypes": ["org.apache.xmlbeans.SchemaType"] }
    ]
  },
  {
    "name": "org.openxmlformats.schemas.officeDocument.x2006.customProperties.impl.CTPropertiesImpl",
    "methods": [
      { "name": "<init>", "parameterTypes": ["org.apache.xmlbeans.SchemaType"] }
    ]
  },
  {
    "name": "org.openxmlformats.schemas.officeDocument.x2006.customProperties.impl.PropertiesDocumentImpl",
    "methods": [
      { "name": "<init>", "parameterTypes": ["org.apache.xmlbeans.SchemaType"] }
    ]
  },
  {
    "name": "org.openxmlformats.schemas.officeDocument.x2006.extendedProperties.impl.CTPropertiesImpl",
    "methods": [
      { "name": "<init>", "parameterTypes": ["org.apache.xmlbeans.SchemaType"] }
    ]
  },
  {
    "name": "org.openxmlformats.schemas.officeDocument.x2006.extendedProperties.impl.PropertiesDocumentImpl",
    "methods": [
      { "name": "<init>", "parameterTypes": ["org.apache.xmlbeans.SchemaType"] }
    ]
  },
  {
    "name": "org.openxmlformats.schemas.officeDocument.x2006.relationships.impl.STRelationshipIdImpl",
    "methods": [
      { "name": "<init>", "parameterTypes": ["org.apache.xmlbeans.SchemaType"] }
    ]
  },
  {
    "name": "org.openxmlformats.schemas.officeDocument.x2006.sharedTypes.impl.STStringImpl",
    "methods": [
      { "name": "<init>", "parameterTypes": ["org.apache.xmlbeans.SchemaType"] }
    ]
  },
  {
    "name": "org.openxmlformats.schemas.presentationml.x2006.main.CTGroupShape"
  },
  {
    "name": "org.openxmlformats.schemas.presentationml.x2006.main.STPlaceholderType$Enum",
    "fields": [{ "name": "table" }]
  },
  {
    "name": "org.openxmlformats.schemas.presentationml.x2006.main.impl.CTApplicationNonVisualDrawingPropsImpl",
    "methods": [
      { "name": "<init>", "parameterTypes": ["org.apache.xmlbeans.SchemaType"] }
    ]
  },
  {
    "name": "org.openxmlformats.schemas.presentationml.x2006.main.impl.CTCommonSlideDataImpl",
    "methods": [
      { "name": "<init>", "parameterTypes": ["org.apache.xmlbeans.SchemaType"] }
    ]
  },
  {
    "name": "org.openxmlformats.schemas.presentationml.x2006.main.impl.CTGroupShapeImpl",
    "methods": [
      { "name": "<init>", "parameterTypes": ["org.apache.xmlbeans.SchemaType"] }
    ]
  },
  {
    "name": "org.openxmlformats.schemas.presentationml.x2006.main.impl.CTGroupShapeNonVisualImpl",
    "methods": [
      { "name": "<init>", "parameterTypes": ["org.apache.xmlbeans.SchemaType"] }
    ]
  },
  {
    "name": "org.openxmlformats.schemas.presentationml.x2006.main.impl.CTNotesMasterImpl",
    "methods": [
      { "name": "<init>", "parameterTypes": ["org.apache.xmlbeans.SchemaType"] }
    ]
  },
  {
    "name": "org.openxmlformats.schemas.presentationml.x2006.main.impl.CTNotesSlideImpl",
    "methods": [
      { "name": "<init>", "parameterTypes": ["org.apache.xmlbeans.SchemaType"] }
    ]
  },
  {
    "name": "org.openxmlformats.schemas.presentationml.x2006.main.impl.CTPlaceholderImpl",
    "methods": [
      { "name": "<init>", "parameterTypes": ["org.apache.xmlbeans.SchemaType"] }
    ]
  },
  {
    "name": "org.openxmlformats.schemas.presentationml.x2006.main.impl.CTPresentationImpl",
    "methods": [
      { "name": "<init>", "parameterTypes": ["org.apache.xmlbeans.SchemaType"] }
    ]
  },
  {
    "name": "org.openxmlformats.schemas.presentationml.x2006.main.impl.CTShapeImpl",
    "methods": [
      { "name": "<init>", "parameterTypes": ["org.apache.xmlbeans.SchemaType"] }
    ]
  },
  {
    "name": "org.openxmlformats.schemas.presentationml.x2006.main.impl.CTShapeNonVisualImpl",
    "methods": [
      { "name": "<init>", "parameterTypes": ["org.apache.xmlbeans.SchemaType"] }
    ]
  },
  {
    "name": "org.openxmlformats.schemas.presentationml.x2006.main.impl.CTSlideIdListEntryImpl",
    "methods": [
      { "name": "<init>", "parameterTypes": ["org.apache.xmlbeans.SchemaType"] }
    ]
  },
  {
    "name": "org.openxmlformats.schemas.presentationml.x2006.main.impl.CTSlideIdListImpl",
    "methods": [
      { "name": "<init>", "parameterTypes": ["org.apache.xmlbeans.SchemaType"] }
    ]
  },
  {
    "name": "org.openxmlformats.schemas.presentationml.x2006.main.impl.CTSlideImpl",
    "methods": [
      { "name": "<init>", "parameterTypes": ["org.apache.xmlbeans.SchemaType"] }
    ]
  },
  {
    "name": "org.openxmlformats.schemas.presentationml.x2006.main.impl.CTSlideLayoutImpl",
    "methods": [
      { "name": "<init>", "parameterTypes": ["org.apache.xmlbeans.SchemaType"] }
    ]
  },
  {
    "name": "org.openxmlformats.schemas.presentationml.x2006.main.impl.CTSlideMasterIdListEntryImpl",
    "methods": [
      { "name": "<init>", "parameterTypes": ["org.apache.xmlbeans.SchemaType"] }
    ]
  },
  {
    "name": "org.openxmlformats.schemas.presentationml.x2006.main.impl.CTSlideMasterIdListImpl",
    "methods": [
      { "name": "<init>", "parameterTypes": ["org.apache.xmlbeans.SchemaType"] }
    ]
  },
  {
    "name": "org.openxmlformats.schemas.presentationml.x2006.main.impl.CTSlideMasterImpl",
    "methods": [
      { "name": "<init>", "parameterTypes": ["org.apache.xmlbeans.SchemaType"] }
    ]
  },
  {
    "name": "org.openxmlformats.schemas.presentationml.x2006.main.impl.NotesDocumentImpl",
    "methods": [
      { "name": "<init>", "parameterTypes": ["org.apache.xmlbeans.SchemaType"] }
    ]
  },
  {
    "name": "org.openxmlformats.schemas.presentationml.x2006.main.impl.NotesMasterDocumentImpl",
    "methods": [
      { "name": "<init>", "parameterTypes": ["org.apache.xmlbeans.SchemaType"] }
    ]
  },
  {
    "name": "org.openxmlformats.schemas.presentationml.x2006.main.impl.PresentationDocumentImpl",
    "methods": [
      { "name": "<init>", "parameterTypes": ["org.apache.xmlbeans.SchemaType"] }
    ]
  },
  {
    "name": "org.openxmlformats.schemas.presentationml.x2006.main.impl.STPlaceholderTypeImpl",
    "methods": [
      { "name": "<init>", "parameterTypes": ["org.apache.xmlbeans.SchemaType"] }
    ]
  },
  {
    "name": "org.openxmlformats.schemas.presentationml.x2006.main.impl.SldDocumentImpl",
    "methods": [
      { "name": "<init>", "parameterTypes": ["org.apache.xmlbeans.SchemaType"] }
    ]
  },
  {
    "name": "org.openxmlformats.schemas.presentationml.x2006.main.impl.SldLayoutDocumentImpl",
    "methods": [
      { "name": "<init>", "parameterTypes": ["org.apache.xmlbeans.SchemaType"] }
    ]
  },
  {
    "name": "org.openxmlformats.schemas.presentationml.x2006.main.impl.SldMasterDocumentImpl",
    "methods": [
      { "name": "<init>", "parameterTypes": ["org.apache.xmlbeans.SchemaType"] }
    ]
  },
  {
    "name": "org.openxmlformats.schemas.wordprocessingml.x2006.main.CTNumLvl"
  },
  {
    "name": "org.openxmlformats.schemas.wordprocessingml.x2006.main.impl.CTBodyImpl",
    "methods": [
      { "name": "<init>", "parameterTypes": ["org.apache.xmlbeans.SchemaType"] }
    ]
  },
  {
    "name": "org.openxmlformats.schemas.wordprocessingml.x2006.main.impl.CTBookmarkImpl",
    "methods": [
      { "name": "<init>", "parameterTypes": ["org.apache.xmlbeans.SchemaType"] }
    ]
  },
  {
    "name": "org.openxmlformats.schemas.wordprocessingml.x2006.main.impl.CTDocDefaultsImpl",
    "methods": [
      { "name": "<init>", "parameterTypes": ["org.apache.xmlbeans.SchemaType"] }
    ]
  },
  {
    "name": "org.openxmlformats.schemas.wordprocessingml.x2006.main.impl.CTDocument1Impl",
    "methods": [
      { "name": "<init>", "parameterTypes": ["org.apache.xmlbeans.SchemaType"] }
    ]
  },
  {
    "name": "org.openxmlformats.schemas.wordprocessingml.x2006.main.impl.CTMarkupRangeImpl",
    "methods": [
      { "name": "<init>", "parameterTypes": ["org.apache.xmlbeans.SchemaType"] }
    ]
  },
  {
    "name": "org.openxmlformats.schemas.wordprocessingml.x2006.main.impl.CTNumberingImpl",
    "methods": [
      { "name": "<init>", "parameterTypes": ["org.apache.xmlbeans.SchemaType"] }
    ]
  },
  {
    "name": "org.openxmlformats.schemas.wordprocessingml.x2006.main.impl.CTPImpl",
    "methods": [
      { "name": "<init>", "parameterTypes": ["org.apache.xmlbeans.SchemaType"] }
    ]
  },
  {
    "name": "org.openxmlformats.schemas.wordprocessingml.x2006.main.impl.CTPPrDefaultImpl",
    "methods": [
      { "name": "<init>", "parameterTypes": ["org.apache.xmlbeans.SchemaType"] }
    ]
  },
  {
    "name": "org.openxmlformats.schemas.wordprocessingml.x2006.main.impl.CTPPrGeneralImpl",
    "methods": [
      { "name": "<init>", "parameterTypes": ["org.apache.xmlbeans.SchemaType"] }
    ]
  },
  {
    "name": "org.openxmlformats.schemas.wordprocessingml.x2006.main.impl.CTPPrImpl",
    "methods": [
      { "name": "<init>", "parameterTypes": ["org.apache.xmlbeans.SchemaType"] }
    ]
  },
  {
    "name": "org.openxmlformats.schemas.wordprocessingml.x2006.main.impl.CTRImpl",
    "methods": [
      { "name": "<init>", "parameterTypes": ["org.apache.xmlbeans.SchemaType"] }
    ]
  },
  {
    "name": "org.openxmlformats.schemas.wordprocessingml.x2006.main.impl.CTRPrDefaultImpl",
    "methods": [
      { "name": "<init>", "parameterTypes": ["org.apache.xmlbeans.SchemaType"] }
    ]
  },
  {
    "name": "org.openxmlformats.schemas.wordprocessingml.x2006.main.impl.CTRPrImpl",
    "methods": [
      { "name": "<init>", "parameterTypes": ["org.apache.xmlbeans.SchemaType"] }
    ]
  },
  {
    "name": "org.openxmlformats.schemas.wordprocessingml.x2006.main.impl.CTSectPrImpl",
    "methods": [
      { "name": "<init>", "parameterTypes": ["org.apache.xmlbeans.SchemaType"] }
    ]
  },
  {
    "name": "org.openxmlformats.schemas.wordprocessingml.x2006.main.impl.CTSettingsImpl",
    "methods": [
      { "name": "<init>", "parameterTypes": ["org.apache.xmlbeans.SchemaType"] }
    ]
  },
  {
    "name": "org.openxmlformats.schemas.wordprocessingml.x2006.main.impl.CTStringImpl",
    "methods": [
      { "name": "<init>", "parameterTypes": ["org.apache.xmlbeans.SchemaType"] }
    ]
  },
  {
    "name": "org.openxmlformats.schemas.wordprocessingml.x2006.main.impl.CTStyleImpl",
    "methods": [
      { "name": "<init>", "parameterTypes": ["org.apache.xmlbeans.SchemaType"] }
    ]
  },
  {
    "name": "org.openxmlformats.schemas.wordprocessingml.x2006.main.impl.CTStylesImpl",
    "methods": [
      { "name": "<init>", "parameterTypes": ["org.apache.xmlbeans.SchemaType"] }
    ]
  },
  {
    "name": "org.openxmlformats.schemas.wordprocessingml.x2006.main.impl.CTTextImpl",
    "methods": [
      { "name": "<init>", "parameterTypes": ["org.apache.xmlbeans.SchemaType"] }
    ]
  },
  {
    "name": "org.openxmlformats.schemas.wordprocessingml.x2006.main.impl.DocumentDocumentImpl",
    "methods": [
      { "name": "<init>", "parameterTypes": ["org.apache.xmlbeans.SchemaType"] }
    ]
  },
  {
    "name": "org.openxmlformats.schemas.wordprocessingml.x2006.main.impl.NumberingDocumentImpl",
    "methods": [
      { "name": "<init>", "parameterTypes": ["org.apache.xmlbeans.SchemaType"] }
    ]
  },
  {
    "name": "org.openxmlformats.schemas.wordprocessingml.x2006.main.impl.SettingsDocumentImpl",
    "methods": [
      { "name": "<init>", "parameterTypes": ["org.apache.xmlbeans.SchemaType"] }
    ]
  },
  {
    "name": "org.openxmlformats.schemas.wordprocessingml.x2006.main.impl.StylesDocumentImpl",
    "methods": [
      { "name": "<init>", "parameterTypes": ["org.apache.xmlbeans.SchemaType"] }
    ]
  },
  {
    "name": "org.osgi.framework.FrameworkUtil"
  },
  {
    "name": "schemaorg_apache_xmlbeans.system.sXMLCONFIG.TypeSystemHolder"
  },
  {
    "name": "schemaorg_apache_xmlbeans.system.sXMLLANG.TypeSystemHolder"
  },
  {
    "name": "schemaorg_apache_xmlbeans.system.sXMLSCHEMA.TypeSystemHolder"
  },
  {
    "name": "schemaorg_apache_xmlbeans.system.sXMLTOOLS.TypeSystemHolder"
  },
  {
    "name": "sun.management.ClassLoadingImpl",
    "queryAllPublicConstructors": true
  },
  {
    "name": "sun.management.CompilationImpl",
    "queryAllPublicConstructors": true
  },
  {
    "name": "sun.management.ManagementFactoryHelper$1",
    "queryAllPublicConstructors": true
  },
  {
    "name": "sun.management.ManagementFactoryHelper$PlatformLoggingImpl",
    "queryAllPublicConstructors": true
  },
  {
    "name": "sun.management.MemoryImpl",
    "queryAllPublicConstructors": true
  },
  {
    "name": "sun.management.MemoryManagerImpl",
    "queryAllPublicConstructors": true
  },
  {
    "name": "sun.management.MemoryPoolImpl",
    "queryAllPublicConstructors": true
  },
  {
    "name": "sun.management.RuntimeImpl",
    "queryAllPublicConstructors": true
  },
  {
    "name": "sun.misc.Unsafe",
    "fields": [{ "name": "theUnsafe" }],
    "methods": [
      { "name": "allocateInstance", "parameterTypes": ["java.lang.Class"] },
      {
        "name": "copyMemory",
        "parameterTypes": [
          "java.lang.Object",
          "long",
          "java.lang.Object",
          "long",
          "long"
        ]
      },
      {
        "name": "getAndAddLong",
        "parameterTypes": ["java.lang.Object", "long", "long"]
      },
      {
        "name": "getAndSetObject",
        "parameterTypes": ["java.lang.Object", "long", "java.lang.Object"]
      },
      { "name": "invokeCleaner", "parameterTypes": ["java.nio.ByteBuffer"] },
      { "name": "storeFence", "parameterTypes": [] }
    ]
  },
  {
    "name": "sun.nio.ch.SelectorImpl",
    "fields": [{ "name": "publicSelectedKeys" }, { "name": "selectedKeys" }]
  },
  {
    "name": "sun.security.provider.NativePRNG",
    "methods": [
      { "name": "<init>", "parameterTypes": [] },
      {
        "name": "<init>",
        "parameterTypes": ["java.security.SecureRandomParameters"]
      }
    ]
  },
  {
    "name": "sun.security.provider.SHA",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  }
]
