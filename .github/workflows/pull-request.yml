name: Pull Request Build

on:
  pull_request:

jobs:
  build-venvs:
    strategy:
      matrix:
        platform: [darwin, linux]
        include:
          - platform: darwin
            os: macos-latest
          - platform: linux
            os: ubuntu-latest
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Build ${{ matrix.platform }} venv
        run: |
          cd venv-build-scripts
          chmod +x build-${{ matrix.platform }}.sh
          ./build-${{ matrix.platform }}.sh

      - name: Upload ${{ matrix.platform }} venv
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.platform }}-venv
          path: observability-native/src/main/resources/${{ matrix.platform }}-venv.zip
          retention-days: 1

  ubuntu-build:
    name: Build on Ubuntu
    runs-on: ubuntu-latest
    needs: build-venvs
    concurrency:
      group: ${{ github.head_ref }}-ubuntu-build
      cancel-in-progress: true
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Download venv artifacts
        uses: actions/download-artifact@v4
        with:
          path: observability-native/src/main/resources/
          pattern: "*-venv"
          merge-multiple: true

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: 21.0.3

      - name: Set ENV Variables
        run: |
          echo -e '${{ toJson(secrets) }}' | jq -r 'to_entries[] | .key + "=" + .value' >> $GITHUB_ENV

      - name: Build the Package
        env:
          packageUser: ${{ github.actor }}
          packagePAT: ${{ secrets.GITHUB_TOKEN }}
        run: |
          ./gradlew build -x test
          ./gradlew test

      - name: Generate CodeCov Report
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: ballerina-platform/${{ github.event.repository.name }}

  windows-build:
    name: Build on Windows
    runs-on: windows-latest
    needs: build-venvs
    concurrency:
      group: ${{ github.head_ref }}-windows-build
      cancel-in-progress: true
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Download venv artifacts
        uses: actions/download-artifact@v4
        with:
          path: observability-native/src/main/resources/
          pattern: "*-venv"
          merge-multiple: true

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: 21.0.3

      - name: Set ENV Variables
        run: |
          echo -e '${{ toJson(secrets) }}' | jq -r 'to_entries[] | .key + "=" + .value' >> $GITHUB_ENV

      - name: Build the Package
        env:
          packageUser: ${{ github.actor }}
          packagePAT: ${{ secrets.GITHUB_TOKEN }}
        run: |
          ./gradlew build -x test -P disable=mcp
          ./gradlew test -P disable=mcp

